buildscript {
  ext {
    kotlinVersion = "1.1.60"
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
    classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")
  }
}

plugins {
  id "org.springframework.boot" version "1.5.8.RELEASE"
}

apply plugin: "kotlin"
apply plugin: "kotlin-spring"


targetCompatibility = sourceCompatibility = 1.8

compileKotlin { kotlinOptions.jvmTarget = targetCompatibility }

compileTestKotlin { kotlinOptions.jvmTarget = targetCompatibility }

repositories { mavenCentral() }

dependencies {
  compile("org.springframework.boot:spring-boot-starter-data-jpa")
  compile("org.springframework.boot:spring-boot-starter-data-rest")
  compile("org.springframework.data:spring-data-rest-hal-browser")
  compile("org.springframework.boot:spring-boot-starter-mustache")
  compile("org.springframework.boot:spring-boot-actuator")

  compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion")
  compile("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")

  runtime("org.springframework.boot:spring-boot-devtools")
  runtime("org.postgresql:postgresql")

  testCompile("org.springframework.boot:spring-boot-starter-test")
}

[test, build, bootRun].each {
  it.dependsOn ":docker-compose:composeUp"
  it.shouldRunAfter assemble, ":docker-compose:composeUp"
  it.finalizedBy ":docker-compose:composeDown"
}
